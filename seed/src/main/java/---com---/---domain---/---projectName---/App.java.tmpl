package {{ subDomain }}.{{ domain }}.{{ projectName }};

import {{ subDomain }}.{{ domain }}.{{ projectName }}.resources.PersonService;

import io.dropwizard.Application;
import io.dropwizard.setup.Bootstrap;
import io.dropwizard.setup.Environment;
import io.federecio.dropwizard.swagger.SwaggerBundle;
import io.federecio.dropwizard.swagger.SwaggerBundleConfiguration;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class App extends Application<AppConfiguration> {
   public static final Logger LOGGER = LoggerFactory.getLogger(App.class);

   public static void main(final String[] args) throws Exception {
      new App().run(args);
   }

   @Override
   public void run(AppConfiguration config, Environment env) {
       LOGGER.info("Application name: {} version: {}", config.getAppName(), config.getVersion());
       final PersonService personService = new PersonService();
       env.jersey().register(personService);

       env.healthChecks().register("template",
           new MyHealthCheck(config.getVersion()));
   }

   @Override
   public void initialize(Bootstrap<AppConfiguration> bootstrap) {
       bootstrap.addBundle(new SwaggerBundle<AppConfiguration>() {
           @Override
           protected SwaggerBundleConfiguration getSwaggerBundleConfiguration(AppConfiguration config) {
               return config.swaggerBundleConfiguration;
           }
       });
   }
}
